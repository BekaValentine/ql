<!DOCTYPE qhelp PUBLIC
  "-//Semmle//qhelp//EN"
  "qhelp.dtd">
<qhelp>

<overview>
<p>
HTTP request handlers should not perform expensive operations, such as accessing
the file system, executing an operating system command, or interacting with a database,
without limiting the rate at which requests are accepted. Otherwise, the application
becomes vulnerable to denial-of-service attacks where an attacker can cause the
application to crash, or become unresponsive, by issuing a large number of requests at
the same time.
</p>
</overview>

<recommendation>
<p>
A rate-limiting middleware should be used to prevent such attacks.
</p>
</recommendation>

<example>
<p>
Assuming that <code>expensive_handler</code> is designated as an expensive handler,
a declaration of this sort will be flagged:
</p>

<sample language=python>
def expensive_handler(args):
  '''do something expensive'''
</sample>

<p>
The solution to this would be to add some form of rate limiting. For instance, if
<code>limit</code> is a rate limiter decorator that takes one argument indicating
the number of requests per second to permit, then the fixed version would be
something like
</p>

<sample language=python>
@limit(10)
def expensive_handler(args):
  '''do something expensive'''
</sample>
</example>

<references>
<li>
OWASP:
<a href="https://www.owasp.org/index.php/Denial_of_Service_Cheat_Sheet">Denial of Service Cheat Sheet</a>.
</li>
<li>
Wikipedia: <a href="https://en.wikipedia.org/wiki/Denial-of-service_attack">Denial-of-service attack</a>.
</li>
</references>
</qhelp>
