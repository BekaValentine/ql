<!DOCTYPE qhelp PUBLIC
  "-//Semmle//qhelp//EN"
  "qhelp.dtd">

<qhelp>
	
	<overview>
	    
	    
	    <!-- What is the English description of the problem to analyze? -->
	    <p>
		    Problem Structures: An array method which requires a callback that returns a value, is called using a
		    callback that does not return a value.
	    </p>
	    
	    
	    <!-- What is the reason this is a problem that deserves a query? -->
		<p>
			Many array methods, such as <code>map</code> and <code>filter</code>, take callback
			arguments which are expected to return values.
		</p>
		
		<p>
			Use of a callback that can sometimes returning nothing is an indication that the
			programmer may have meant to use some other function, such as <code>forEach</code>,
			which makes no use of the returned value.
		</p>
		
		<p>
			Where side effects are concerned, <code>map</code> and <code>forEach</code> are
			identical, so such confusion is understandable. 
		</p>
		
		
		<!-- What are the main concepts and potentially relevant libraries? -->
        <ul>
          <li>
            Methods and Calls: function utils (to be able to reference the method by name,
            independent of how it's called, whether its directly called or called via
            <code>call</code> or <code>apply</code>)
          </li>
          <li>Callbacks: referring expressions / data flow (for indirect reference to callbacks)</li>
          <li>Return Values: function utils / control flow (for finding returns)</li>
        </ul>
        
        
	</overview>
	
	
	
	<!-- When someone finds occurrences of this problem, how can it be fixed? -->
	<recommendation>
		<p>
			Replace the empty returns with a value return, or possibly replace the method with
			one that doesn't expect the callback to return a value.
		</p>
	</recommendation>
	
	
	
	<!-- What are some test case examples? Positive and Negative cases -->
    <source src="examples/ArrayCallbackDoesntReturnValue/TestCases.js" />
    
    
    
    <!-- What are some representative examples? Explain them and how they can be fixed. -->
	<example>
		
		
		<p>
			In the following code, the list <code>arr</code> is mapped over using a callback
			which returns nothing if the conditional is false. The intention is to purify some
			array elements in just those cases when the predicate <code>pred</code> is true.
		</p>
		
		<source src="examples/ArrayCallbackDoesntReturnValue/RepresentativeExample0.js" />
		
		<p>
			This doesn't function as described, however. Since the conditional has no else
			branch, and no return statement after it, whenever the predicate is false, the
			function will return <code>undefined</code> instead of the unpurified element.
		</p>
		
		<p>
			The developer should instead add explicit returns in all branches: 
		</p>
		
		<source src="examples/ArrayCallbackDoesntReturnValue/RepresentativeExample1.js" />
	</example>
	
	
	
	<!-- What are some representative examples? Explain them and how they can be fixed. -->
	<example>
		<p>
			Another common use for methods like <code>map</code> is to call some side effecting
			function on each element of a list. For example:
		</p>
		
		<source src="examples/ArrayCallbackDoesntReturnValue/RepresentativeExample2.js" />
		
		<p>
			In cases like this, the appropriate thing to do is replace the <code>map</code>
			method with the <code>forEach</code> method:
		</p>
		
		<source src="examples/ArrayCallbackDoesntReturnValue/RepresentativeExample3.js" />
		
		<p>
			A secondary indicator that this is the underlying intention is that the use of the
			method is never actually assigned to anything, as in this example.
		</p>
	</example>
	
	
	
	<!-- What are good places to go if people want to read more? -->
	<references>
		<ul>
			<li>DeepScan: <a href="https://deepscan.io/docs/rules/array-callback-return-missing">ARRAY_CALLBACK_RETURN_MISSING</a></li>
		</ul>
	</references>
</qhelp>