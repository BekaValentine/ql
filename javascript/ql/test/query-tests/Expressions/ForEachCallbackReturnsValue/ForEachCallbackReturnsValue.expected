| test.js:13:1:13:38 | [].forE ... n 1; }) | This method application has the callback argument $@, which is expected to not return any values, but its definitions is $@, which returns the value $@ | test.js:13:12:13:37 | functio ... rn 1; } | functio ... rn 1; } | test.js:13:12:13:37 | functio ... rn 1; } | functio ... rn 1; } | test.js:13:34:13:34 | 1 | 1 |
| test.js:14:1:14:63 | Array.p ...  1; }]) | This method application has the callback argument $@, which is expected to not return any values, but its definitions is $@, which returns the value $@ | test.js:14:36:14:61 | functio ... rn 1; } | functio ... rn 1; } | test.js:14:36:14:61 | functio ... rn 1; } | functio ... rn 1; } | test.js:14:58:14:58 | 1 | 1 |
| test.js:15:1:15:60 | Array.p ... n 1; }) | This method application has the callback argument $@, which is expected to not return any values, but its definitions is $@, which returns the value $@ | test.js:15:34:15:59 | functio ... rn 1; } | functio ... rn 1; } | test.js:15:34:15:59 | functio ... rn 1; } | functio ... rn 1; } | test.js:15:56:15:56 | 1 | 1 |
| test.js:17:1:17:18 | [].forEach(x => 1) | This method application has the callback argument $@, which is expected to not return any values, but its definitions is $@, which returns the value $@ | test.js:17:12:17:17 | x => 1 | x => 1 | test.js:17:12:17:17 | x => 1 | x => 1 | test.js:17:17:17:17 | 1 | 1 |
| test.js:18:1:18:43 | Array.p ...  => 1]) | This method application has the callback argument $@, which is expected to not return any values, but its definitions is $@, which returns the value $@ | test.js:18:36:18:41 | x => 1 | x => 1 | test.js:18:36:18:41 | x => 1 | x => 1 | test.js:18:41:18:41 | 1 | 1 |
| test.js:19:1:19:40 | Array.p ... x => 1) | This method application has the callback argument $@, which is expected to not return any values, but its definitions is $@, which returns the value $@ | test.js:19:34:19:39 | x => 1 | x => 1 | test.js:19:34:19:39 | x => 1 | x => 1 | test.js:19:39:19:39 | 1 | 1 |
| test.js:25:1:25:14 | [].forEach(f0) | This method application has the callback argument $@, which is expected to not return any values, but its definitions is $@, which returns the value $@ | test.js:25:12:25:13 | f0 | f0 | test.js:24:10:24:35 | functio ... rn 1; } | functio ... rn 1; } | test.js:24:32:24:32 | 1 | 1 |
| test.js:26:1:26:39 | Array.p ... , [f0]) | This method application has the callback argument $@, which is expected to not return any values, but its definitions is $@, which returns the value $@ | test.js:26:36:26:37 | f0 | f0 | test.js:24:10:24:35 | functio ... rn 1; } | functio ... rn 1; } | test.js:24:32:24:32 | 1 | 1 |
| test.js:27:1:27:36 | Array.p ... [], f0) | This method application has the callback argument $@, which is expected to not return any values, but its definitions is $@, which returns the value $@ | test.js:27:34:27:35 | f0 | f0 | test.js:24:10:24:35 | functio ... rn 1; } | functio ... rn 1; } | test.js:24:32:24:32 | 1 | 1 |
| test.js:30:1:30:14 | [].forEach(f1) | This method application has the callback argument $@, which is expected to not return any values, but its definitions is $@, which returns the value $@ | test.js:30:12:30:13 | f1 | f1 | test.js:29:10:29:15 | x => 1 | x => 1 | test.js:29:15:29:15 | 1 | 1 |
| test.js:31:1:31:39 | Array.p ... , [f1]) | This method application has the callback argument $@, which is expected to not return any values, but its definitions is $@, which returns the value $@ | test.js:31:36:31:37 | f1 | f1 | test.js:29:10:29:15 | x => 1 | x => 1 | test.js:29:15:29:15 | 1 | 1 |
| test.js:32:1:32:36 | Array.p ... [], f1) | This method application has the callback argument $@, which is expected to not return any values, but its definitions is $@, which returns the value $@ | test.js:32:34:32:35 | f1 | f1 | test.js:29:10:29:15 | x => 1 | x => 1 | test.js:29:15:29:15 | 1 | 1 |